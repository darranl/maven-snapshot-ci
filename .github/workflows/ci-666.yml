name: XNIO and Remoting
'on':
  push:
    branches: ci-branch-666
env:
  MAVEN_OPTS: -Xms756M -Xmx1g
jobs:
  xnio-build:
    name: xnio
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        repository: kabir/xnio
        ref: '3.8'
    - uses: actions/checkout@v2
      with:
        path: .ci-tools
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Grab project version
      run: |
        mvn -B help:evaluate -Dexpression=project.version -pl .
        TMP="$(mvn -B help:evaluate -Dexpression=project.version -pl . | grep -v '^\[')"
        echo "version: ${TMP}"
        echo "Saving version to env var: \$VERSION_xnio"
        echo "::set-env name=VERSION_xnio::${TMP}"
    - name: Add '::1 localhost' to hosts file
      run: sudo bash -c 'echo ::1 localhost >> /etc/hosts'
    - name: Build with Maven
      run: 'mvn -B install -DskipTests '
    - name: Run multi-repo-ci-tool '{}' command
      if: ${{ failure() }}
      run: |
        java -jar .ci-tools/multi-repo-ci-tool.jar copy-logs . .project-build-logs/xnio
    - if: ${{ failure() }}
      run: |
        cd .project-build-logs
        zip -r xnio.zip xnio
        rm -rf xnio
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: xnio_and_remoting-logs-20200907-141135
        path: .project-build-logs
  jboss-remoting-build:
    name: jboss-remoting
    runs-on: ubuntu-latest
    needs:
    - xnio-build
    steps:
    - uses: actions/checkout@v2
      with:
        repository: kabir/jboss-remoting
        ref: '5.0'
    - uses: actions/checkout@v2
      with:
        path: .ci-tools
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Grab project version
      run: |
        mvn -B help:evaluate -Dexpression=project.version -pl .
        TMP="$(mvn -B help:evaluate -Dexpression=project.version -pl . | grep -v '^\[')"
        echo "version: ${TMP}"
        echo "Saving version to env var: \$VERSION_jboss_remoting"
        echo "::set-env name=VERSION_jboss_remoting::${TMP}"
    - name: Add '::1 localhost' to hosts file
      run: sudo bash -c 'echo ::1 localhost >> /etc/hosts'
    - name: Build with Maven
      run: mvn -B install -DskipTests  -Dxnio.version="${VERSION_xnio}"
    - name: Run multi-repo-ci-tool '{}' command
      if: ${{ failure() }}
      run: |
        java -jar .ci-tools/multi-repo-ci-tool.jar copy-logs . .project-build-logs/jboss-remoting
    - if: ${{ failure() }}
      run: |
        cd .project-build-logs
        zip -r jboss-remoting.zip jboss-remoting
        rm -rf jboss-remoting
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: xnio_and_remoting-logs-20200907-141135
        path: .project-build-logs
  wildfly-core-build:
    name: wildfly-core-build
    runs-on: ubuntu-latest
    env:
      MAVEN_SMOKE_TEST_PARAMS: -DfailIfNoTests=false -Dipv6 -Djboss.test.transformers.eap
        -Dci-cleanup=true -fae
      MAVEN_TEST_PARAMS: -DfailIfNoTests=false -Dipv6 -Djboss.test.transformers.eap
        -Dci-cleanup=true -fae -DallTests
      MAVEN_BUILD_EXTRA_PARAMS: -DlegacyBuild -DlegacyRelease -DskipTests
    needs:
    - xnio-build
    - jboss-remoting-build
    steps:
    - uses: actions/checkout@v2
      with:
        repository: kabir/wildfly-core
        ref: gh-action-fixes
    - uses: actions/checkout@v2
      with:
        path: .ci-tools
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Grab project version
      run: |
        mvn -B help:evaluate -Dexpression=project.version -pl .
        TMP="$(mvn -B help:evaluate -Dexpression=project.version -pl . | grep -v '^\[')"
        echo "version: ${TMP}"
        echo "Saving version to env var: \$VERSION_wildfly_core"
        echo "::set-env name=VERSION_wildfly_core::${TMP}"
    - name: Add '::1 localhost' to hosts file
      run: sudo bash -c 'echo ::1 localhost >> /etc/hosts'
    - name: Maven Build
      run: |
        mvn -B install ${MAVEN_TEST_PARAMS} ${MAVEN_BUILD_EXTRA_PARAMS}  -Dversion.org.jboss.xnio="${VERSION_xnio}" -Dversion.org.jboss.remoting="${VERSION_jboss_remoting}"
        echo "build done!"
    - name: Set up TMate for SSH debugging
      uses: mxschmitt/action-tmate@v2
    - name: Run multi-repo-ci-tool '{}' command
      if: ${{ failure() }}
      run: |
        java -jar .ci-tools/multi-repo-ci-tool.jar copy-logs . .project-build-logs/wildfly-core-build
    - if: ${{ failure() }}
      run: |
        cd .project-build-logs
        zip -r wildfly-core-build.zip wildfly-core-build
        rm -rf wildfly-core-build
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: xnio_and_remoting-logs-20200907-141135
        path: .project-build-logs
  wildfly-build:
    name: wildfly-build
    runs-on: ubuntu-latest
    env:
      MAVEN_TEST_BUILD_DEPS: install -pl build,dist,ee-dist,ee-build -DskipTests
      MAVEN_TEST_PARAMS: -DfailIfNoTests=false -Dipv6 -Djboss.test.transformers.eap
        -Dci-cleanup=true -fae
      MAVEN_BUILD_EXTRA_PARAMS: -DlegacyBuild -DlegacyRelease -DskipTests
    needs:
    - wildfly-core-build
    steps:
    - uses: actions/checkout@v2
      with:
        repository: kabir/wildfly
        ref: gh-action-fixes
    - uses: actions/checkout@v2
      with:
        path: .ci-tools
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Grab project version
      run: |
        mvn -B help:evaluate -Dexpression=project.version -pl .
        TMP="$(mvn -B help:evaluate -Dexpression=project.version -pl . | grep -v '^\[')"
        echo "version: ${TMP}"
        echo "Saving version to env var: \$VERSION_wildfly"
        echo "::set-env name=VERSION_wildfly::${TMP}"
    - name: Add '::1 localhost' to hosts file
      run: sudo bash -c 'echo ::1 localhost >> /etc/hosts'
    - name: Maven Build
      run: |
        mvn -B install ${MAVEN_TEST_PARAMS} ${MAVEN_BUILD_EXTRA_PARAMS}  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
        ls -R dist/target/
        echo "build done!"
    - name: Run multi-repo-ci-tool '{}' command
      if: ${{ failure() }}
      run: |
        java -jar .ci-tools/multi-repo-ci-tool.jar copy-logs . .project-build-logs/wildfly-build
    - if: ${{ failure() }}
      run: |
        cd .project-build-logs
        zip -r wildfly-build.zip wildfly-build
        rm -rf wildfly-build
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: xnio_and_remoting-logs-20200907-141135
        path: .project-build-logs
  wildfly-ts-smoke:
    name: wildfly-ts-smoke
    runs-on: ubuntu-latest
    env:
      MAVEN_TEST_BUILD_DEPS: install -pl build,dist,ee-dist,ee-build -DskipTests
      MAVEN_TEST_PARAMS: -DfailIfNoTests=false -Dipv6 -Djboss.test.transformers.eap
        -Dci-cleanup=true -fae
    needs:
    - wildfly-core-build
    - wildfly-build
    steps:
    - uses: actions/checkout@v2
      with:
        repository: kabir/wildfly
        ref: gh-action-fixes
    - uses: actions/checkout@v2
      with:
        path: .ci-tools
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Grab project version
      run: |
        mvn -B help:evaluate -Dexpression=project.version -pl .
        TMP="$(mvn -B help:evaluate -Dexpression=project.version -pl . | grep -v '^\[')"
        echo "version: ${TMP}"
        echo "Saving version to env var: \$VERSION_wildfly"
        echo "::set-env name=VERSION_wildfly::${TMP}"
    - name: Add '::1 localhost' to hosts file
      run: sudo bash -c 'echo ::1 localhost >> /etc/hosts'
    - name: Maven Build
      run: |
        mvn -B package ${MAVEN_TEST_PARAMS}  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
    - name: Run multi-repo-ci-tool '{}' command
      if: ${{ failure() }}
      run: |
        java -jar .ci-tools/multi-repo-ci-tool.jar copy-logs . .project-build-logs/wildfly-ts-smoke
    - if: ${{ failure() }}
      run: |
        cd .project-build-logs
        zip -r wildfly-ts-smoke.zip wildfly-ts-smoke
        rm -rf wildfly-ts-smoke
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: xnio_and_remoting-logs-20200907-141135
        path: .project-build-logs
  wildfly-ts-basic:
    name: wildfly-ts-basic
    runs-on: ubuntu-latest
    env:
      MAVEN_TEST_BUILD_DEPS: install -pl build,dist,ee-dist,ee-build -DskipTests
      MAVEN_TEST_PARAMS: -DfailIfNoTests=false -Dipv6 -Djboss.test.transformers.eap
        -Dci-cleanup=true -fae
    needs:
    - wildfly-core-build
    - wildfly-build
    steps:
    - uses: actions/checkout@v2
      with:
        repository: kabir/wildfly
        ref: gh-action-fixes
    - uses: actions/checkout@v2
      with:
        path: .ci-tools
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Grab project version
      run: |
        mvn -B help:evaluate -Dexpression=project.version -pl .
        TMP="$(mvn -B help:evaluate -Dexpression=project.version -pl . | grep -v '^\[')"
        echo "version: ${TMP}"
        echo "Saving version to env var: \$VERSION_wildfly"
        echo "::set-env name=VERSION_wildfly::${TMP}"
    - name: Add '::1 localhost' to hosts file
      run: sudo bash -c 'echo ::1 localhost >> /etc/hosts'
    - name: Maven Build
      run: |
        mvn -B ${MAVEN_TEST_BUILD_DEPS}  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
        mvn -B package ${MAVEN_IPV4_TEST_PARAMS} -Dts.basic -pl testsuite/integration/basic/ -Dtest=DiscoveryGroupExternalMessagingDeploymentTestCase  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
        mvn -B package ${MAVEN_TEST_PARAMS} -Dts.basic -pl testsuite/integration/basic/,testsuite/integration/ws/  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
    - name: Run multi-repo-ci-tool '{}' command
      if: ${{ failure() }}
      run: |
        java -jar .ci-tools/multi-repo-ci-tool.jar copy-logs . .project-build-logs/wildfly-ts-basic
    - if: ${{ failure() }}
      run: |
        cd .project-build-logs
        zip -r wildfly-ts-basic.zip wildfly-ts-basic
        rm -rf wildfly-ts-basic
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: xnio_and_remoting-logs-20200907-141135
        path: .project-build-logs
  wildfly-ts-clustering:
    name: wildfly-ts-clustering
    runs-on: ubuntu-latest
    env:
      MAVEN_TEST_BUILD_DEPS: install -pl build,dist,ee-dist,ee-build -DskipTests
      MAVEN_TEST_PARAMS: -DfailIfNoTests=false -Dipv6 -Djboss.test.transformers.eap
        -Dci-cleanup=true -fae
    needs:
    - wildfly-core-build
    - wildfly-build
    steps:
    - uses: actions/checkout@v2
      with:
        repository: kabir/wildfly
        ref: gh-action-fixes
    - uses: actions/checkout@v2
      with:
        path: .ci-tools
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Grab project version
      run: |
        mvn -B help:evaluate -Dexpression=project.version -pl .
        TMP="$(mvn -B help:evaluate -Dexpression=project.version -pl . | grep -v '^\[')"
        echo "version: ${TMP}"
        echo "Saving version to env var: \$VERSION_wildfly"
        echo "::set-env name=VERSION_wildfly::${TMP}"
    - name: Add '::1 localhost' to hosts file
      run: sudo bash -c 'echo ::1 localhost >> /etc/hosts'
    - name: Maven Build
      run: |
        mvn -B ${MAVEN_TEST_BUILD_DEPS}  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
        mvn -B package ${MAVEN_TEST_PARAMS} -Dts.clustering -pl testsuite/integration/clustering/ -Dts.timeout.factor=300  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
    - name: Run multi-repo-ci-tool '{}' command
      if: ${{ failure() }}
      run: |
        java -jar .ci-tools/multi-repo-ci-tool.jar copy-logs . .project-build-logs/wildfly-ts-clustering
    - if: ${{ failure() }}
      run: |
        cd .project-build-logs
        zip -r wildfly-ts-clustering.zip wildfly-ts-clustering
        rm -rf wildfly-ts-clustering
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: xnio_and_remoting-logs-20200907-141135
        path: .project-build-logs
  wildfly-ts-domain:
    name: wildfly-ts-domain
    runs-on: ubuntu-latest
    env:
      MAVEN_TEST_BUILD_DEPS: install -pl build,dist,ee-dist,ee-build -DskipTests
      MAVEN_TEST_PARAMS: -DfailIfNoTests=false -Dipv6 -Djboss.test.transformers.eap
        -Dci-cleanup=true -fae
    needs:
    - wildfly-core-build
    - wildfly-build
    steps:
    - uses: actions/checkout@v2
      with:
        repository: kabir/wildfly
        ref: gh-action-fixes
    - uses: actions/checkout@v2
      with:
        path: .ci-tools
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Grab project version
      run: |
        mvn -B help:evaluate -Dexpression=project.version -pl .
        TMP="$(mvn -B help:evaluate -Dexpression=project.version -pl . | grep -v '^\[')"
        echo "version: ${TMP}"
        echo "Saving version to env var: \$VERSION_wildfly"
        echo "::set-env name=VERSION_wildfly::${TMP}"
    - name: Add '::1 localhost' to hosts file
      run: sudo bash -c 'echo ::1 localhost >> /etc/hosts'
    - name: Maven Build
      run: |
        mvn -B ${MAVEN_TEST_BUILD_DEPS}  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
        mvn -B package ${MAVEN_TEST_PARAMS} -Dts.domain -pl testsuite/domain  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
    - name: Run multi-repo-ci-tool '{}' command
      if: ${{ failure() }}
      run: |
        java -jar .ci-tools/multi-repo-ci-tool.jar copy-logs . .project-build-logs/wildfly-ts-domain
    - if: ${{ failure() }}
      run: |
        cd .project-build-logs
        zip -r wildfly-ts-domain.zip wildfly-ts-domain
        rm -rf wildfly-ts-domain
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: xnio_and_remoting-logs-20200907-141135
        path: .project-build-logs
  wildfly-ts-elytron:
    name: wildfly-ts-elytron
    runs-on: ubuntu-latest
    env:
      MAVEN_TEST_BUILD_DEPS: install -pl build,dist,ee-dist,ee-build -DskipTests
      MAVEN_TEST_PARAMS: -DfailIfNoTests=false -Dipv6 -Djboss.test.transformers.eap
        -Dci-cleanup=true -fae
    needs:
    - wildfly-core-build
    - wildfly-build
    steps:
    - uses: actions/checkout@v2
      with:
        repository: kabir/wildfly
        ref: gh-action-fixes
    - uses: actions/checkout@v2
      with:
        path: .ci-tools
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Grab project version
      run: |
        mvn -B help:evaluate -Dexpression=project.version -pl .
        TMP="$(mvn -B help:evaluate -Dexpression=project.version -pl . | grep -v '^\[')"
        echo "version: ${TMP}"
        echo "Saving version to env var: \$VERSION_wildfly"
        echo "::set-env name=VERSION_wildfly::${TMP}"
    - name: Add '::1 localhost' to hosts file
      run: sudo bash -c 'echo ::1 localhost >> /etc/hosts'
    - name: Maven Build
      run: |
        mvn -B ${MAVEN_TEST_BUILD_DEPS}  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
        mvn -B package ${MAVEN_TEST_PARAMS} -Dinteg.module -Dts.elytron -pl testsuite/integration/elytron  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
    - name: Run multi-repo-ci-tool '{}' command
      if: ${{ failure() }}
      run: |
        java -jar .ci-tools/multi-repo-ci-tool.jar copy-logs . .project-build-logs/wildfly-ts-elytron
    - if: ${{ failure() }}
      run: |
        cd .project-build-logs
        zip -r wildfly-ts-elytron.zip wildfly-ts-elytron
        rm -rf wildfly-ts-elytron
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: xnio_and_remoting-logs-20200907-141135
        path: .project-build-logs
  wildfly-ts-iiop:
    name: wildfly-ts-iiop
    runs-on: ubuntu-latest
    env:
      MAVEN_TEST_BUILD_DEPS: install -pl build,dist,ee-dist,ee-build -DskipTests
      MAVEN_TEST_PARAMS: -DfailIfNoTests=false -Dipv6 -Djboss.test.transformers.eap
        -Dci-cleanup=true -fae
    needs:
    - wildfly-core-build
    - wildfly-build
    steps:
    - uses: actions/checkout@v2
      with:
        repository: kabir/wildfly
        ref: gh-action-fixes
    - uses: actions/checkout@v2
      with:
        path: .ci-tools
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Grab project version
      run: |
        mvn -B help:evaluate -Dexpression=project.version -pl .
        TMP="$(mvn -B help:evaluate -Dexpression=project.version -pl . | grep -v '^\[')"
        echo "version: ${TMP}"
        echo "Saving version to env var: \$VERSION_wildfly"
        echo "::set-env name=VERSION_wildfly::${TMP}"
    - name: Add '::1 localhost' to hosts file
      run: sudo bash -c 'echo ::1 localhost >> /etc/hosts'
    - name: Maven Build
      run: |
        mvn -B ${MAVEN_TEST_BUILD_DEPS}  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
        mvn -B package ${MAVEN_TEST_PARAMS} -Dts.iiop -pl testsuite/integration/iiop  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
    - name: Run multi-repo-ci-tool '{}' command
      if: ${{ failure() }}
      run: |
        java -jar .ci-tools/multi-repo-ci-tool.jar copy-logs . .project-build-logs/wildfly-ts-iiop
    - if: ${{ failure() }}
      run: |
        cd .project-build-logs
        zip -r wildfly-ts-iiop.zip wildfly-ts-iiop
        rm -rf wildfly-ts-iiop
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: xnio_and_remoting-logs-20200907-141135
        path: .project-build-logs
  wildfly-ts-legacy:
    name: wildfly-ts-legacy
    runs-on: ubuntu-latest
    env:
      MAVEN_TEST_BUILD_DEPS: install -pl build,dist,ee-dist,ee-build -DskipTests
      MAVEN_TEST_PARAMS: -DfailIfNoTests=false -Dipv6 -Djboss.test.transformers.eap
        -Dci-cleanup=true -fae
    needs:
    - wildfly-core-build
    - wildfly-build
    steps:
    - uses: actions/checkout@v2
      with:
        repository: kabir/wildfly
        ref: gh-action-fixes
    - uses: actions/checkout@v2
      with:
        path: .ci-tools
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Grab project version
      run: |
        mvn -B help:evaluate -Dexpression=project.version -pl .
        TMP="$(mvn -B help:evaluate -Dexpression=project.version -pl . | grep -v '^\[')"
        echo "version: ${TMP}"
        echo "Saving version to env var: \$VERSION_wildfly"
        echo "::set-env name=VERSION_wildfly::${TMP}"
    - name: Add '::1 localhost' to hosts file
      run: sudo bash -c 'echo ::1 localhost >> /etc/hosts'
    - name: Maven Build
      run: |
        mvn -B ${MAVEN_TEST_BUILD_DEPS}  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
        mvn -B package ${MAVEN_TEST_PARAMS} -Dts.legacy -pl testsuite/integration/legacy  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
    - name: Run multi-repo-ci-tool '{}' command
      if: ${{ failure() }}
      run: |
        java -jar .ci-tools/multi-repo-ci-tool.jar copy-logs . .project-build-logs/wildfly-ts-legacy
    - if: ${{ failure() }}
      run: |
        cd .project-build-logs
        zip -r wildfly-ts-legacy.zip wildfly-ts-legacy
        rm -rf wildfly-ts-legacy
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: xnio_and_remoting-logs-20200907-141135
        path: .project-build-logs
  wildfly-ts-legacy-ejb-client:
    name: wildfly-ts-legacy-ejb-client
    runs-on: ubuntu-latest
    env:
      MAVEN_TEST_BUILD_DEPS: install -pl build,dist,ee-dist,ee-build -DskipTests
      MAVEN_TEST_PARAMS: -DfailIfNoTests=false -Dipv6 -Djboss.test.transformers.eap
        -Dci-cleanup=true -fae
    needs:
    - wildfly-core-build
    - wildfly-build
    steps:
    - uses: actions/checkout@v2
      with:
        repository: kabir/wildfly
        ref: gh-action-fixes
    - uses: actions/checkout@v2
      with:
        path: .ci-tools
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Grab project version
      run: |
        mvn -B help:evaluate -Dexpression=project.version -pl .
        TMP="$(mvn -B help:evaluate -Dexpression=project.version -pl . | grep -v '^\[')"
        echo "version: ${TMP}"
        echo "Saving version to env var: \$VERSION_wildfly"
        echo "::set-env name=VERSION_wildfly::${TMP}"
    - name: Add '::1 localhost' to hosts file
      run: sudo bash -c 'echo ::1 localhost >> /etc/hosts'
    - name: Maven Build
      run: |
        mvn -B ${MAVEN_TEST_BUILD_DEPS}  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
        mvn -B package ${MAVEN_TEST_PARAMS} -Dts.legacy.ejb.client -pl testsuite/integration/legacy-ejb-client  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
    - name: Run multi-repo-ci-tool '{}' command
      if: ${{ failure() }}
      run: |
        java -jar .ci-tools/multi-repo-ci-tool.jar copy-logs . .project-build-logs/wildfly-ts-legacy-ejb-client
    - if: ${{ failure() }}
      run: |
        cd .project-build-logs
        zip -r wildfly-ts-legacy-ejb-client.zip wildfly-ts-legacy-ejb-client
        rm -rf wildfly-ts-legacy-ejb-client
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: xnio_and_remoting-logs-20200907-141135
        path: .project-build-logs
  wildfly-ts-manualmode:
    name: wildfly-ts-manualmode
    runs-on: ubuntu-latest
    env:
      MAVEN_TEST_BUILD_DEPS: install -pl build,dist,ee-dist,ee-build -DskipTests
      MAVEN_TEST_PARAMS: -DfailIfNoTests=false -Dipv6 -Djboss.test.transformers.eap
        -Dci-cleanup=true -fae
    needs:
    - wildfly-core-build
    - wildfly-build
    steps:
    - uses: actions/checkout@v2
      with:
        repository: kabir/wildfly
        ref: gh-action-fixes
    - uses: actions/checkout@v2
      with:
        path: .ci-tools
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Grab project version
      run: |
        mvn -B help:evaluate -Dexpression=project.version -pl .
        TMP="$(mvn -B help:evaluate -Dexpression=project.version -pl . | grep -v '^\[')"
        echo "version: ${TMP}"
        echo "Saving version to env var: \$VERSION_wildfly"
        echo "::set-env name=VERSION_wildfly::${TMP}"
    - name: Add '::1 localhost' to hosts file
      run: sudo bash -c 'echo ::1 localhost >> /etc/hosts'
    - name: Maven Build
      run: |
        mvn -B ${MAVEN_TEST_BUILD_DEPS}  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
        mvn -B package ${MAVEN_TEST_PARAMS} -Dts.manualmode -pl testsuite/integration/manualmode/  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
    - name: Run multi-repo-ci-tool '{}' command
      if: ${{ failure() }}
      run: |
        java -jar .ci-tools/multi-repo-ci-tool.jar copy-logs . .project-build-logs/wildfly-ts-manualmode
    - if: ${{ failure() }}
      run: |
        cd .project-build-logs
        zip -r wildfly-ts-manualmode.zip wildfly-ts-manualmode
        rm -rf wildfly-ts-manualmode
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: xnio_and_remoting-logs-20200907-141135
        path: .project-build-logs
  wildfly-ts-microprofile:
    name: wildfly-ts-microprofile
    runs-on: ubuntu-latest
    env:
      MAVEN_TEST_BUILD_DEPS: install -pl build,dist,ee-dist,ee-build -DskipTests
      MAVEN_TEST_PARAMS: -DfailIfNoTests=false -Dipv6 -Djboss.test.transformers.eap
        -Dci-cleanup=true -fae
    needs:
    - wildfly-core-build
    - wildfly-build
    steps:
    - uses: actions/checkout@v2
      with:
        repository: kabir/wildfly
        ref: gh-action-fixes
    - uses: actions/checkout@v2
      with:
        path: .ci-tools
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Grab project version
      run: |
        mvn -B help:evaluate -Dexpression=project.version -pl .
        TMP="$(mvn -B help:evaluate -Dexpression=project.version -pl . | grep -v '^\[')"
        echo "version: ${TMP}"
        echo "Saving version to env var: \$VERSION_wildfly"
        echo "::set-env name=VERSION_wildfly::${TMP}"
    - name: Add '::1 localhost' to hosts file
      run: sudo bash -c 'echo ::1 localhost >> /etc/hosts'
    - name: Maven Build
      run: |
        mvn -B ${MAVEN_TEST_BUILD_DEPS}  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
        mvn -B package ${MAVEN_TEST_PARAMS} -Dts.microprofile -rf testsuite/integration/microprofile  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
    - name: Run multi-repo-ci-tool '{}' command
      if: ${{ failure() }}
      run: |
        java -jar .ci-tools/multi-repo-ci-tool.jar copy-logs . .project-build-logs/wildfly-ts-microprofile
    - if: ${{ failure() }}
      run: |
        cd .project-build-logs
        zip -r wildfly-ts-microprofile.zip wildfly-ts-microprofile
        rm -rf wildfly-ts-microprofile
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: xnio_and_remoting-logs-20200907-141135
        path: .project-build-logs
  wildfly-ts-multinode:
    name: wildfly-ts-multinode
    runs-on: ubuntu-latest
    env:
      MAVEN_TEST_BUILD_DEPS: install -pl build,dist,ee-dist,ee-build -DskipTests
      MAVEN_TEST_PARAMS: -DfailIfNoTests=false -Dipv6 -Djboss.test.transformers.eap
        -Dci-cleanup=true -fae
    needs:
    - wildfly-core-build
    - wildfly-build
    steps:
    - uses: actions/checkout@v2
      with:
        repository: kabir/wildfly
        ref: gh-action-fixes
    - uses: actions/checkout@v2
      with:
        path: .ci-tools
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Grab project version
      run: |
        mvn -B help:evaluate -Dexpression=project.version -pl .
        TMP="$(mvn -B help:evaluate -Dexpression=project.version -pl . | grep -v '^\[')"
        echo "version: ${TMP}"
        echo "Saving version to env var: \$VERSION_wildfly"
        echo "::set-env name=VERSION_wildfly::${TMP}"
    - name: Add '::1 localhost' to hosts file
      run: sudo bash -c 'echo ::1 localhost >> /etc/hosts'
    - name: Maven Build
      run: |
        mvn -B ${MAVEN_TEST_BUILD_DEPS}  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
        mvn -B package ${MAVEN_TEST_PARAMS} -Dts.multinode -rf testsuite/integration/multinode -DforkMode=always  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
    - name: Run multi-repo-ci-tool '{}' command
      if: ${{ failure() }}
      run: |
        java -jar .ci-tools/multi-repo-ci-tool.jar copy-logs . .project-build-logs/wildfly-ts-multinode
    - if: ${{ failure() }}
      run: |
        cd .project-build-logs
        zip -r wildfly-ts-multinode.zip wildfly-ts-multinode
        rm -rf wildfly-ts-multinode
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: xnio_and_remoting-logs-20200907-141135
        path: .project-build-logs
  wildfly-ts-rbac:
    name: wildfly-ts-rbac
    runs-on: ubuntu-latest
    env:
      MAVEN_TEST_BUILD_DEPS: install -pl build,dist,ee-dist,ee-build -DskipTests
      MAVEN_TEST_PARAMS: -DfailIfNoTests=false -Dipv6 -Djboss.test.transformers.eap
        -Dci-cleanup=true -fae
    needs:
    - wildfly-core-build
    - wildfly-build
    steps:
    - uses: actions/checkout@v2
      with:
        repository: kabir/wildfly
        ref: gh-action-fixes
    - uses: actions/checkout@v2
      with:
        path: .ci-tools
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Grab project version
      run: |
        mvn -B help:evaluate -Dexpression=project.version -pl .
        TMP="$(mvn -B help:evaluate -Dexpression=project.version -pl . | grep -v '^\[')"
        echo "version: ${TMP}"
        echo "Saving version to env var: \$VERSION_wildfly"
        echo "::set-env name=VERSION_wildfly::${TMP}"
    - name: Add '::1 localhost' to hosts file
      run: sudo bash -c 'echo ::1 localhost >> /etc/hosts'
    - name: Maven Build
      run: |
        mvn -B ${MAVEN_TEST_BUILD_DEPS}  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
        mvn -B package ${MAVEN_TEST_PARAMS} -Dts.rbac -pl testsuite/integration/rbac  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
    - name: Run multi-repo-ci-tool '{}' command
      if: ${{ failure() }}
      run: |
        java -jar .ci-tools/multi-repo-ci-tool.jar copy-logs . .project-build-logs/wildfly-ts-rbac
    - if: ${{ failure() }}
      run: |
        cd .project-build-logs
        zip -r wildfly-ts-rbac.zip wildfly-ts-rbac
        rm -rf wildfly-ts-rbac
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: xnio_and_remoting-logs-20200907-141135
        path: .project-build-logs
  wildfly-ts-rts:
    name: wildfly-ts-rts
    runs-on: ubuntu-latest
    env:
      MAVEN_TEST_BUILD_DEPS: install -pl build,dist,ee-dist,ee-build -DskipTests
      MAVEN_TEST_PARAMS: -DfailIfNoTests=false -Dipv6 -Djboss.test.transformers.eap
        -Dci-cleanup=true -fae
    needs:
    - wildfly-core-build
    - wildfly-build
    steps:
    - uses: actions/checkout@v2
      with:
        repository: kabir/wildfly
        ref: gh-action-fixes
    - uses: actions/checkout@v2
      with:
        path: .ci-tools
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Grab project version
      run: |
        mvn -B help:evaluate -Dexpression=project.version -pl .
        TMP="$(mvn -B help:evaluate -Dexpression=project.version -pl . | grep -v '^\[')"
        echo "version: ${TMP}"
        echo "Saving version to env var: \$VERSION_wildfly"
        echo "::set-env name=VERSION_wildfly::${TMP}"
    - name: Add '::1 localhost' to hosts file
      run: sudo bash -c 'echo ::1 localhost >> /etc/hosts'
    - name: Maven Build
      run: |
        mvn -B ${MAVEN_TEST_BUILD_DEPS}  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
        mvn -B package ${MAVEN_TEST_PARAMS} -Dts.rts -pl testsuite/integration/rts  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
    - name: Run multi-repo-ci-tool '{}' command
      if: ${{ failure() }}
      run: |
        java -jar .ci-tools/multi-repo-ci-tool.jar copy-logs . .project-build-logs/wildfly-ts-rts
    - if: ${{ failure() }}
      run: |
        cd .project-build-logs
        zip -r wildfly-ts-rts.zip wildfly-ts-rts
        rm -rf wildfly-ts-rts
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: xnio_and_remoting-logs-20200907-141135
        path: .project-build-logs
  wildfly-ts-secman:
    name: wildfly-ts-secman
    runs-on: ubuntu-latest
    env:
      MAVEN_TEST_BUILD_DEPS: install -pl build,dist,ee-dist,ee-build -DskipTests
      MAVEN_TEST_PARAMS: -DfailIfNoTests=false -Dipv6 -Djboss.test.transformers.eap
        -Dci-cleanup=true -fae
    needs:
    - wildfly-core-build
    - wildfly-build
    steps:
    - uses: actions/checkout@v2
      with:
        repository: kabir/wildfly
        ref: gh-action-fixes
    - uses: actions/checkout@v2
      with:
        path: .ci-tools
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Grab project version
      run: |
        mvn -B help:evaluate -Dexpression=project.version -pl .
        TMP="$(mvn -B help:evaluate -Dexpression=project.version -pl . | grep -v '^\[')"
        echo "version: ${TMP}"
        echo "Saving version to env var: \$VERSION_wildfly"
        echo "::set-env name=VERSION_wildfly::${TMP}"
    - name: Add '::1 localhost' to hosts file
      run: sudo bash -c 'echo ::1 localhost >> /etc/hosts'
    - name: Maven Build
      run: |
        mvn -B ${MAVEN_TEST_BUILD_DEPS}  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
        mvn -B package ${MAVEN_TEST_PARAMS} -Dts.secman -pl testsuite/integration/secman  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
    - name: Run multi-repo-ci-tool '{}' command
      if: ${{ failure() }}
      run: |
        java -jar .ci-tools/multi-repo-ci-tool.jar copy-logs . .project-build-logs/wildfly-ts-secman
    - if: ${{ failure() }}
      run: |
        cd .project-build-logs
        zip -r wildfly-ts-secman.zip wildfly-ts-secman
        rm -rf wildfly-ts-secman
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: xnio_and_remoting-logs-20200907-141135
        path: .project-build-logs
  wildfly-ts-vdx:
    name: wildfly-ts-vdx
    runs-on: ubuntu-latest
    env:
      MAVEN_TEST_BUILD_DEPS: install -pl build,dist,ee-dist,ee-build -DskipTests
      MAVEN_TEST_PARAMS: -DfailIfNoTests=false -Dipv6 -Djboss.test.transformers.eap
        -Dci-cleanup=true -fae
    needs:
    - wildfly-core-build
    - wildfly-build
    steps:
    - uses: actions/checkout@v2
      with:
        repository: kabir/wildfly
        ref: gh-action-fixes
    - uses: actions/checkout@v2
      with:
        path: .ci-tools
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Grab project version
      run: |
        mvn -B help:evaluate -Dexpression=project.version -pl .
        TMP="$(mvn -B help:evaluate -Dexpression=project.version -pl . | grep -v '^\[')"
        echo "version: ${TMP}"
        echo "Saving version to env var: \$VERSION_wildfly"
        echo "::set-env name=VERSION_wildfly::${TMP}"
    - name: Add '::1 localhost' to hosts file
      run: sudo bash -c 'echo ::1 localhost >> /etc/hosts'
    - name: Maven Build
      run: |
        mvn -B ${MAVEN_TEST_BUILD_DEPS}  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
        mvn -B package ${MAVEN_TEST_PARAMS} -DallTests -pl testsuite/integration/vdx  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
    - name: Run multi-repo-ci-tool '{}' command
      if: ${{ failure() }}
      run: |
        java -jar .ci-tools/multi-repo-ci-tool.jar copy-logs . .project-build-logs/wildfly-ts-vdx
    - if: ${{ failure() }}
      run: |
        cd .project-build-logs
        zip -r wildfly-ts-vdx.zip wildfly-ts-vdx
        rm -rf wildfly-ts-vdx
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: xnio_and_remoting-logs-20200907-141135
        path: .project-build-logs
  wildfly-ts-xts:
    name: wildfly-ts-xts
    runs-on: ubuntu-latest
    env:
      MAVEN_TEST_BUILD_DEPS: install -pl build,dist,ee-dist,ee-build -DskipTests
      MAVEN_TEST_PARAMS: -DfailIfNoTests=false -Dipv6 -Djboss.test.transformers.eap
        -Dci-cleanup=true -fae
    needs:
    - wildfly-core-build
    - wildfly-build
    steps:
    - uses: actions/checkout@v2
      with:
        repository: kabir/wildfly
        ref: gh-action-fixes
    - uses: actions/checkout@v2
      with:
        path: .ci-tools
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Grab project version
      run: |
        mvn -B help:evaluate -Dexpression=project.version -pl .
        TMP="$(mvn -B help:evaluate -Dexpression=project.version -pl . | grep -v '^\[')"
        echo "version: ${TMP}"
        echo "Saving version to env var: \$VERSION_wildfly"
        echo "::set-env name=VERSION_wildfly::${TMP}"
    - name: Add '::1 localhost' to hosts file
      run: sudo bash -c 'echo ::1 localhost >> /etc/hosts'
    - name: Maven Build
      run: |
        mvn -B ${MAVEN_TEST_BUILD_DEPS}  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
        mvn -B package ${MAVEN_TEST_PARAMS} -Dts.xts -rf testsuite/integration/xts  -Dversion.org.wildfly.core="${VERSION_wildfly_core}"
    - name: Run multi-repo-ci-tool '{}' command
      if: ${{ failure() }}
      run: |
        java -jar .ci-tools/multi-repo-ci-tool.jar copy-logs . .project-build-logs/wildfly-ts-xts
    - if: ${{ failure() }}
      run: |
        cd .project-build-logs
        zip -r wildfly-ts-xts.zip wildfly-ts-xts
        rm -rf wildfly-ts-xts
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: xnio_and_remoting-logs-20200907-141135
        path: .project-build-logs
